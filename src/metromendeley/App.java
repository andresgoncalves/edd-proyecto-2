package metromendeley;

import java.awt.CardLayout;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author Andres
 */
public class App extends javax.swing.JFrame {
    
    private static final int HASH_TABLE_SIZE = 16;
    
    private final HashTable<Summary> summariesByTitle = new HashTable<>(HASH_TABLE_SIZE);
    private final HashTable<List<Summary>> summariesByAuthor = new HashTable<>(HASH_TABLE_SIZE);
    private final HashTable<List<Summary>> summariesByKeyword = new HashTable<>(HASH_TABLE_SIZE);
    
    /**
     * Creates new form App
     */
    public App() {
        initComponents();
    }
    
    public void registerSummary(Summary summary) {
        /* Agregar resumen a la tabla principal */
        summariesByTitle.set(summary.getTitle(), summary);
        /* Agregar resumen a la tabla indexada por autores */
        for(String author : summary.getAuthors()) {
            List<Summary> authorList = summariesByAuthor.get(author);
            if(authorList == null) {
                authorList = new List<>();
                summariesByAuthor.set(author, authorList);
            }
            authorList.append(summary);
        }
        /* Agregar resumen a la tabla indexada por palabras clave */
        for(String keyword : summary.getKeywords()) {
            List<Summary> keywordList = summariesByKeyword.get(keyword);
            if(keywordList == null) {
                keywordList = new List<>();
                summariesByKeyword.set(keyword, keywordList);
            }
            keywordList.append(summary);
        }
    }

    public Summary getSummaryByTitle(String title) {
        return summariesByTitle.get(title);
    }
    
    public List<Summary> getSummariesByAuthor(String author) {
        List<Summary> summaries = summariesByAuthor.get(author);
        return summaries != null ? summaries : new List<>();
    }
    
    public List<Summary> getSummariesByKeyword(String keyword) {
        List<Summary> summaries =  summariesByKeyword.get(keyword);
        return summaries != null ? summaries : new List<>();
    }
    
    public void analizeSummary(String nameSummary){
        Summary summaryGet=summariesByTitle.get(nameSummary);
    }
    
   
    public void show(String name) {
        ((CardLayout) mainPanel.getLayout()).show(mainPanel, name);
    }
    
    public void showOptions(){
        show("optionsPanel");
    }
    
    public void showSearchByKeyword(){
        show("searchKey");
    }
    
    public void showSearchByAuthor(){
        show("authorPanel");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        optionsPanel = new metromendeley.OptionsPanel();
        searchAuthor = new metromendeley.SearchAuthor();
        searchPanel = new metromendeley.SearchKeywordPanel();
        analizeSummary1 = new metromendeley.AnalizeSummary();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MetroMendeley");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));

        mainPanel.setLayout(new java.awt.CardLayout());
        mainPanel.add(optionsPanel, "optionsPanel");
        mainPanel.add(searchAuthor, "authorPanel");
        mainPanel.add(searchPanel, "searchKey");
        mainPanel.add(analizeSummary1, "card5");

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static App instance;
    
    public static void main(String args[]) {
        /* Set the look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            instance = new App();
            instance.setVisible(true);
        });
    }
    
    public static App getInstance() {
        return instance;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private metromendeley.AnalizeSummary analizeSummary1;
    private javax.swing.JPanel mainPanel;
    private metromendeley.OptionsPanel optionsPanel;
    private metromendeley.SearchAuthor searchAuthor;
    private metromendeley.SearchKeywordPanel searchPanel;
    // End of variables declaration//GEN-END:variables

}

